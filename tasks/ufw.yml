---
- name: Start ufw service
  service:
    name: ufw
    enabled: true
    state: started

- name: Enable ufw
  ufw:
    direction: incoming
    state: enabled
    policy: allow

- name: Enable forwarding - ufw
  lineinfile:
    dest: /etc/default/ufw
    regexp: "^DEFAULT_FORWARD_POLICY="
    line: DEFAULT_FORWARD_POLICY="ACCEPT"

- name: Allow incoming VPN connections - ufw
  ufw:
    direction: in
    proto: "{{ openvpn_proto }}"
    to_port: "{{ openvpn_port | string }}"
    rule: allow

- name: Accept packets from VPN tunnel adaptor - ufw
  ufw:
    direction: in
    interface: tun+
    rule: allow

- name: Setup nat table rules - ufw
  blockinfile:
    dest: /etc/ufw/before.rules
    state: present
    insertbefore: \*filter
    block: |
      *nat
      :POSTROUTING ACCEPT [0:0]
      -A POSTROUTING -s {{ openvpn_server_network }}/{{ openvpn_server_netmask_cidr }} -j SNAT --to-source {{ ansible_default_ipv4.address }}
      COMMIT
    marker: "# OpenVPN SNAT {{ openvpn_server_network }}/{{ openvpn_server_netmask_cidr }}_{{ ansible_default_ipv4.address }} {mark}"
  when: not openvpn_masquerade_not_snat
  notify:
    - restart ufw

- name: Setup nat table rules with MASQUERADE - ufw
  blockinfile:
    dest: /etc/ufw/before.rules
    state: present
    insertbefore: \*filter
    block: |
      *nat
      :POSTROUTING ACCEPT [0:0]
      -A POSTROUTING -s {{ openvpn_server_network }}/{{ openvpn_server_netmask_cidr }} -j MASQUERADE
      COMMIT
    marker: "# OpenVPN MASQ {{ openvpn_server_network }}/{{ openvpn_server_netmask_cidr }} {mark}"
  when: openvpn_masquerade_not_snat
  notify:
    - restart ufw
